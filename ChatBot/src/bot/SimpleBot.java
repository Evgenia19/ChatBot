package bot;

import java.util.*;
import java.util.regex.*;

public class SimpleBot {

	static final String[] QUSTIONS = { "Сколько клеток на шахматной доске? " + "a) 64 " + "б) 48 " + "в) 36 ",
			"Откуда пришли шахматы? " + "а) Египет " + "б) Индия " + "в) Персия ",
			"Какая фигура самая важная на доске? " + "а) король " + "б) пешка " + "в) ферзь ",
			"Какая фигра может совершить взятие на проходе? " + "а) пешка " + "б) ладья " + "в) ферзь ",
			"Какая фигура ходит как слон и ладья? " + "а) король " + "б) никакая " + "в) ферзь ",
			"Первый чемпион мира по шахматам? " + "а) Каспаров " + "б) Таль " + "в) Стейниц ",
			"Как расшифровываются шахматы? " + "а) шах и мат " + "б) смерть короля " + "в) королевская игра ",
			"Действующий чемпион мира? " + "а) Ананд " + "б) Карякин " + "в) Карлсен ",
			"Назовите фамилию призидента российского ФИДЕ? " + "а) Кирсанов " + "б) Соловьев " + "в) Илюмжинов ",
			"Как называется такое начало пратии: е4 Kf6, е5 Kd5? " + "а) Защита Алехина " + "б) Защита 2х коней "
					+ "в) Испанское начало ", };

	static final String[] ERROR_ANSWERS = { "Увы. ", "Вы ошиблись. ", "Неправильно. ", };

	static final Map<String, String> PATTERNS_FOR_ANALYSIS = new HashMap<String, String>() {
		{
			// hello
			put("хай", "hello");
			put("привет", "hello");
			put("здорово", "hello");
			put("здравствуй", "hello");
			// who // name
			put("кто\\s.*ты", "name");
			put("ты\\s.*кто", "name");
			put("как\\s.*зовут", "name");
			put("как\\s.*имя", "name");
			put("есть\\s.*имя", "name");
			put("какое\\s.*имя", "name");
			// 64
			put("64", "64");
			put("шестьдесят\\\\s.*четыре", "64");
			// India
			put("индия", "India");
			// King
			put("король", "King");
			// peshka
			put("пешка", "peshka");
			// Queen
			put("ферзь", "Queen");
			// Steanist
			put("стейниц", "Stenist");
			// died king
			put("смерть\\s.*короля", "dead king");
			// Karleson
			put("Карлсен", "Karleson");
			// Iluminginov
			put("Кирсан\\s.*Илюмжинов", "Iluminginov");
			// Alexina
			put("защита\\s.*алехина", "Alexina");
			// start
			put("начать", "start");
			// contin
			put("продолжить", "continum");
			// yes
			put("^да", "yes");
			put("согласен", "yes");
			// bye
			put("прощай", "bye");
			put("увидимся", "bye");
			put("до\\s.*свидания", "bye");
		}
	};

	static final Map<String, String> ANSWERS_BY_PATTERNS = new HashMap<String, String>() {
		{
			put("hello", "Здравствуйте, рад Вас видеть.");
			put("name",
					"Я обычный чат-бот. Зовите меня Шахттер :). Я очень много знаю о шахматах, и хочу проверить, сколько, Вы, знаете?! Я буду задавать вопросы, и оценивать ваши ответы. Если хотите начать, то пишите начать. А если продолжить, то догадайтесь.");
			put("continum", " ");
			put("start", QUSTIONS[0]);
			put("Alexina", "Вы молодец! ");
			put("Iluminginov", "Это был сложный вопрос. ");
			put("Karleson", "Известный факт. ");
			put("dead king", "Хорошие зания. ");
			put("Stenist", "Вы правы! ");
			put("Queen", "Играть вы умеете. ");
			put("peshka", "Вас не обмануть. ");
			put("King", "Еще не очень сложно. ");
			put("64", "Пока все просто. ");
			put("India", "Ничего сложного. ");
			put("yes", "Продолжим... ");
			put("bye", "До свидания. Надеюсь, ещё увидимся.");
		}
	};
	Pattern pattern; // for regexp
	Random random; // for random answers

	public SimpleBot() {
		random = new Random();
	}

	int count = 0;
	static int i = 0;

	public String sayInReturn(String msg, boolean ai) {
		String say = "Не понимаю о чем вы, если хотите можете перечитать мои навыки";
		if (i >= QUSTIONS.length) {
			say = "Викторина законилась. Ваш результат: " + Integer.toString(count) + "правильных. "
					+ "Хотите сыграть еще раз?";
			i = 0;
		}
		if (ai) {
			String message = String.join(" ", msg.toLowerCase().split("[ {,|.}?]+"));
			for (Map.Entry<String, String> o : PATTERNS_FOR_ANALYSIS.entrySet()) {
				pattern = Pattern.compile(o.getKey());
				if (pattern.matcher(message).find()) {
					if (o.getValue().equals("continum"))
						return QUSTIONS[i];
					if (o.getValue().equals("hello") || o.getValue().equals("name") || o.getValue().equals("buy")
							|| o.getValue().equals("start"))
						return ANSWERS_BY_PATTERNS.get(o.getValue());
					else {
						count += 1;
						say = ANSWERS_BY_PATTERNS.get(o.getValue());
						i = i + 1;
						if (i > 0)
							return say + QUSTIONS[i];
					}
				} else
					say = ERROR_ANSWERS[random.nextInt(ERROR_ANSWERS.length)] + QUSTIONS[i];
			}
		}
		return say;
	}
}